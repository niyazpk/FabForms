{
  "name": "grunt-contrib-watch",
  "description": "Run predefined tasks whenever watched file patterns are added, changed or deleted.",
  "version": "0.2.0a",
  "homepage": "https://github.com/gruntjs/grunt-contrib-watch",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gruntjs/grunt-contrib-watch.git"
  },
  "bugs": {
    "url": "https://github.com/gruntjs/grunt-contrib-watch/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gruntjs/grunt-contrib-watch/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt nodeunit -v"
  },
  "dependencies": {
    "gaze": "~0.3.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.0",
    "grunt-contrib-nodeunit": "~0.1.1",
    "grunt-contrib-internal": "~0.1.1",
    "grunt": "~0.4.0rc3"
  },
  "keywords": [
    "gruntplugin",
    "watch"
  ],
  "contributors": [
    {
      "name": "Kyle Robinson Young",
      "url": "http://dontkry.com"
    },
    {
      "name": "\"Cowboy\" Ben Alman",
      "url": "http://benalman.com"
    }
  ],
  "readme": "# grunt-contrib-watch [![Build Status](https://secure.travis-ci.org/gruntjs/grunt-contrib-watch.png?branch=master)](http://travis-ci.org/gruntjs/grunt-contrib-watch)\r\n\r\n> Run predefined tasks whenever watched file patterns are added, changed or deleted.\r\n\r\n\r\n## Getting Started\r\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-contrib-watch --save-dev\r\n```\r\n\r\n[grunt]: http://gruntjs.com/\r\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\r\n\r\n\r\n## Watch task\r\n_Run this task with the `grunt watch` command._\r\n\r\n### Overview\r\n\r\nInside your `Gruntfile.js` file, add a section named `watch`. This section specifies the files to watch, tasks to run when an event occurs and the options used.\r\n### Settings\r\n\r\nThere are a number of options available. Please review the [minimatch options here](https://github.com/isaacs/minimatch#options). As well as some additional options as follows:\r\n\r\n#### files\r\nType: `String|Array`\r\n\r\nThis defines what file patterns this task will watch. Can be a string or an array of files and/or minimatch patterns.\r\n\r\n#### tasks\r\nType: `String|Array`\r\n\r\nThis defines which tasks to run when a watched file event occurs.\r\n\r\n#### options.interrupt\r\nType: `boolean`\r\nDefault: false\r\n\r\nAs files are modified this watch task will spawn tasks in child processes. The default behavior will only spawn a new child process per target when the previous process has finished. Set the `interrupt` option to true to terminate the previous process and spawn a new one upon later changes.\r\n\r\nExample:\r\n```js\r\nwatch: {\r\n  scripts: {\r\n    files: '**/*.js',\r\n    tasks: ['jshint'],\r\n    options: {\r\n      interrupt: true\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### options.debounceDelay\r\nType: `Integer`\r\nDefault: 500\r\n\r\nHow long to wait before emitting events in succession for the same filepath and status. For example if your `Gruntfile.js` file was `changed`, a `changed` event will only fire again after the given milliseconds.\r\n\r\nExample:\r\n```js\r\nwatch: {\r\n  scripts: {\r\n    files: '**/*.js',\r\n    tasks: ['jshint'],\r\n    options: {\r\n      debounceDelay: 250\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### options.interval\r\nType: `Integer`\r\nDefault: 100\r\n\r\nThe `interval` is passed to `fs.watchFile`. Since `interval` is only used by `fs.watchFile` and this watcher also uses `fs.watch`; it is recommended to ignore this option. *Default is 100ms*.\r\n\r\n### Examples\r\n\r\n```js\r\n// Simple config to run jshint any time a file is added, changed or deleted\r\ngrunt.initConfig({\r\n  watch: {\r\n    files: '**/*',\r\n    tasks: ['jshint']\r\n  }\r\n});\r\n```\r\n\r\n```js\r\n// Advanced config. Run specific tasks when specific files are added, changed or deleted.\r\ngrunt.initConfig({\r\n  watch: {\r\n    gruntfile: {\r\n      files: 'Gruntfile.js',\r\n      tasks: ['jshint:gruntfile'],\r\n      options: {\r\n        nocase: true\r\n      }\r\n    },\r\n    src: {\r\n      files: ['lib/*.js', 'css/**/*.scss', '!lib/dontwatch.js'],\r\n      tasks: ['default']\r\n    },\r\n    test: {\r\n      files: '<%= jshint.test.src %>',\r\n      tasks: ['jshint:test', 'qunit']\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n\r\n## Release History\r\n\r\n * 2012-12-14   v0.2.0   Conversion to grunt v0.4 conventions. Remove node v0.6 and grunt v0.3 support. Allow watch task to be renamed. Use grunt.util.spawn \"grunt\" option. Updated to gaze@0.3.0, forceWatchMethod option removed.\r\n * 2012-10-31   v0.1.4   Prevent watch from spawning duplicate watch tasks\r\n * 2012-10-27   v0.1.3   Better method to spawn the grunt bin Bump gaze to v0.2.0. Better handles some events and new option forceWatchMethod Only support Node.js >= v0.8\r\n * 2012-10-16   v0.1.2   Only spawn a process per task one at a time Add interrupt option to cancel previous spawned process Grunt v0.3 compatibility changes\r\n * 2012-10-15   v0.1.1   Fallback to global grunt bin if local doesnt exist. Fatal if bin cannot be found Update to gaze 0.1.6\r\n * 2012-10-07   v0.1.0   Release watch task Remove spawn from helper Run on Grunt v0.4\r\n\r\n---\r\n\r\nTask submitted by [Kyle Robinson Young](http://dontkry.com)\r\n\r\n*This file was generated on Fri Dec 14 2012 21:19:48.*\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-contrib-watch@0.2.0a",
  "dist": {
    "shasum": "6912b8c74dcef35227a4931cf38df7e0f27c2d3e"
  },
  "_from": "grunt-contrib-watch@git://github.com/gruntjs/grunt-contrib-watch.git#808d4a32d7c4f3151a95ff02760c82fb8ede3622"
}
