{
  "name": "grunt-mocha",
  "description": "Grunt task for running Mocha specs",
  "version": "0.2.0",
  "homepage": "https://github.com/kmiyashiro/grunt-mocha",
  "author": {
    "name": "Kelly Miyashiro",
    "email": "miyashiro.kelly@gmail.com",
    "url": "http://non-diligent.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kmiyashiro/grunt-mocha.git"
  },
  "bugs": {
    "url": "https://github.com/kmiyashiro/grunt-mocha/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kmiyashiro/grunt-mocha/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "./node_modules/.bin/grunt test"
  },
  "dependencies": {
    "grunt-lib-phantomjs": "https://github.com/kmiyashiro/grunt-lib-phantomjs/tarball/master",
    "growl": "~1"
  },
  "devDependencies": {
    "grunt": "~0.4.0a",
    "grunt-cli": "~0.1.1"
  },
  "optionalDependencies": {
    "growl": "~1"
  },
  "keywords": [
    "gruntplugin mocha test phantomjs"
  ],
  "readme": "**0.4.0 migration details in [HISTORY.md](/kmiyashiro/grunt-mocha/blob/devel/HISTORY.md)**\r\n\r\nAutomatically run *client-side* mocha specs via grunt/mocha/PhantomJS\r\n\r\nFor a grunt task for server-side mocha tests, see https://github.com/yaymukund/grunt-simple-mocha\r\n\r\n# grunt-mocha\r\n\r\n(package/README format heavily borrowed from [grunt-jasmine-task](https://github.com/creynders/grunt-jasmine-task) and builtin QUnit task)\r\n\r\n[Grunt](https://github.com/cowboy/grunt) plugin for running Mocha browser specs in a headless browser (PhantomJS)\r\n\r\n## Getting Started\r\n\r\n### Task config\r\n\r\n```js\r\nmocha: {\r\n    // runs all html files (except test2.html) in the test dir\r\n    // In this example, there's only one, but you can add as many as\r\n    // you want. You can split them up into different groups here\r\n    // ex: admin: [ 'test/admin.html' ]\r\n    all: [ 'test/**/!(test2).html' ],\r\n    \r\n    // Runs 'test/test2.html' with specified mocha options.\r\n    // This variant auto-includes 'mocha-helper.js' so you do not have\r\n    // to include it in your HTML spec file. Instead, you must add an\r\n    // environment check before you run `mocha.run` in your HTML.\r\n    test2: {\r\n\r\n        // Test files\r\n        src: [ 'test/test2.html' ],\r\n\r\n        // mocha options\r\n        options: {\r\n            ignoreLeaks: false,\r\n            grep: 'food'\r\n        },\r\n\r\n        // Indicates whether 'mocha.run()' should be executed in \r\n        // 'mocha-helper.js'\r\n        //\r\n        // NOTE: If you use AMD, you should not use this and just add a call to \r\n        // `mocha.run` after you load the specs\r\n        run: true\r\n    }\r\n}\r\n```\r\n\r\n### Vanilla JS\r\n\r\n- Write mocha task description in grunt config using full format and specify `run: true` option (see `example/grunt.js` for details);\r\n- Check for PhantomJS `userAgent` in a test html file and run tests only in a real browser (see `example/test/test2.html` for details).\r\n\r\nIn this case you shouldn't include `mocha-helper.js` (it will be included automatically) and tests will be run from `mocha-helper.js`.\r\n\r\nAlternatively, include `mocha-helper.js` from `tasks/mocha` after you include `mocha.js` and run `mocha.setup` in your HTML file. The helper will override `mocha.setup` if it detects PhantomJS. See `example/test/test.html`.\r\n\r\n### AMD\r\n\r\nExample setup with AMD (advanced): https://gist.github.com/2655876\r\n\r\n### Grunt and this plugin\r\n\r\nFirst, make sure you have grunt installed globally, `npm install grunt -g`\r\n\r\nInstall this grunt plugin next to your project's [grunt.js gruntfile](https://github.com/cowboy/grunt/blob/master/docs/getting_started.md) with: `npm install grunt-mocha`\r\n\r\nThen add this line to your project's `grunt.js` gruntfile at the bottom:\r\n\r\n```javascript\r\ngrunt.loadNpmTasks('grunt-mocha');\r\n```\r\n\r\nAlso add this to the ```grunt.initConfig``` object in the same file:\r\n\r\n```javascript\r\nmocha: {\r\n  index: ['specs/index.html']\r\n},\r\n```\r\n\r\nReplace ```specs/index.html``` with the location of your mocha spec running html file.\r\n\r\nNow you can run the mocha task with `grunt mocha`, but it won't work. That's because you need...\r\n\r\n### PhantomJS\r\n\r\nThis task is for running Mocha tests in a headless browser, PhantomJS. [See the FAQ on how to install PhantomJS](https://github.com/gruntjs/grunt/blob/master/docs/faq.md#why-does-grunt-complain-that-phantomjs-isnt-installed).\r\n\r\n### Mocha\r\n\r\nUse [Mocha](http://visionmedia.github.com/mocha/)\r\n\r\n### Maybe Growl?\r\n\r\nGrowl support is optional. I'm not sure what the Windows situation is with growl.\r\n\r\n### Hacks\r\n\r\nThe PhantomJS -> Grunt superdimensional conduit uses `alert`. If you have disabled or aliased alert in your app, this won't work. I have conveniently set a global `PHANTOMJS` on `window` so you can conditionally override alert in your app.\r\n\r\n## License\r\nCopyright (c) 2012 Kelly Miyashiro\r\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "grunt-mocha@0.2.0",
  "dist": {
    "shasum": "2845d80f83bf2767f6f41cd931af1c5ef92c1508"
  },
  "_from": "grunt-mocha@git://github.com/kmiyashiro/grunt-mocha.git#58248fc03ae2335fa0930e591796fc80a3b0d497"
}
